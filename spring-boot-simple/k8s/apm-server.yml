---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apm-server
  labels:
    app: apm-server
data:
  apm-server.yml: |-
    apm-server:
      host: "0.0.0.0:8200"

      frontend:
        enabled: false

    setup.template.settings:
      index:
        number_of_shards: 1
        codec: best_compression

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']

    setup.kibana:
      host: '${KIBANA_HOST:kibana}:${KIBANA_PORT:5601}'
---
apiVersion: v1
kind: Service
metadata:
  name: apm-server
  labels:
    app: apm-server
spec:
  type: NodePort
  ports:
  - port: 8200
    name: apm-port
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: apm-server
spec:
  # this replicas value is default
  # modify it according to your case
  replicas: 1
  template:
    metadata:
      labels:
        app: apm-server
    spec:
      containers:
      - name: apm-server
        image: docker.elastic.co/apm/apm-server:7.2.0
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch.default.svc.cluster.local
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value:
        - name: ELASTICSEARCH_PASSWORD
          value:
        - name: KIBANA_HOST
          value: kibana.default.svc.cluster.local
        - name: KIBANA_PORT
          value: "5601"
        - name: KIBANA_USERNAME
          value:
        - name: KIBANA_PASSWORD
          value:
        - name: ELASTIC_CLOUD_ID
          value:
        - name: ELASTIC_CLOUD_AUTH
          value:
        - name: NODE_NAME
        ports:
        - containerPort: 8200
          name: apm-port
        volumeMounts:
        - name: apm-server-config
          mountPath: /usr/share/apm-server/apm-server.yml
          readOnly: true
          subPath: apm-server.yml
      volumes:
      - name: apm-server-config
        configMap:
          name: apm-server-config
